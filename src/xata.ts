// Generated by Xata Codegen 0.28.3. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "time-slots",
    columns: [
      { name: "name", type: "string", unique: true },
      { name: "durationHours", type: "int", defaultValue: "0" },
      { name: "from", type: "int" },
      { name: "to", type: "int" },
    ],
  },
  {
    name: "locations",
    columns: [
      { name: "name", type: "string", unique: true },
      { name: "tags", type: "multiple" },
      { name: "danger", type: "int", notNull: true, defaultValue: "0" },
      { name: "type", type: "string", notNull: true, defaultValue: "location" },
      { name: "sortui", type: "int", defaultValue: "0" },
    ],
  },
  { name: "npc", columns: [{ name: "name", type: "text" }] },
  {
    name: "events",
    columns: [
      { name: "name", type: "string", unique: true },
      { name: "type", type: "string" },
      { name: "event1", type: "string" },
      { name: "event2", type: "string" },
      { name: "event3", type: "string" },
      { name: "event4", type: "string" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type TimeSlots = InferredTypes["time-slots"];
export type TimeSlotsRecord = TimeSlots & XataRecord;

export type Locations = InferredTypes["locations"];
export type LocationsRecord = Locations & XataRecord;

export type Npc = InferredTypes["npc"];
export type NpcRecord = Npc & XataRecord;

export type Events = InferredTypes["events"];
export type EventsRecord = Events & XataRecord;

export type DatabaseSchema = {
  "time-slots": TimeSlotsRecord;
  locations: LocationsRecord;
  npc: NpcRecord;
  events: EventsRecord;
};

const DatabaseClient = buildClient();
// console.log('app js', process.env.REACT_APP_XATA_API_KEY);
const defaultOptions = {
  databaseURL:
    "https://Ivan-Vovk-s-workspace-f6b1sv.us-east-1.xata.sh/db/adische0",
  enableBrowser: true,
  apiKey: process.env.REACT_APP_XATA_API_KEY,
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
